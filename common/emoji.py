#===============================================================================
# Emoji v1.0
# by Yoriyari
#===============================================================================
# Update History
# ..............................................................................
# 24 May 2021 - v1.0; Split from common.py; Added card_emoji from card.py;
#               Changed the if-return trees in each function to one dict call
#               instead. -YY
# 30 Apr 2021 - Now emoji/number returns None; Added card_to_emoji. -YY
# 24 Apr 2021 - added two extra functions maybe? -RK
#               (string_to_emoji -YY)
# 18 Apr 2021 - Creation of common.py; Added number_to_emoji and
#               emoji_to_number. -YY
#===============================================================================
# Notes
# ..............................................................................
#
#===============================================================================
# Description
# ..............................................................................
# emoji.py handles getting emoji representations for given things, and in some
# cases, getting other things for given emoji.
#===============================================================================

#Define Emoji Dicts
number_emoji = {
    0: "0️⃣", 1: "1️⃣", 2: "2️⃣", 3: "3️⃣", 4: "4️⃣", 5: "5️⃣",
    6: "6️⃣", 7: "7️⃣", 8: "8️⃣", 9: "9️⃣", 10: "🔟"
}

emoji_number = {
    "0️⃣": 0, "1️⃣": 1, "2️⃣": 2, "3️⃣": 3, "4️⃣": 4, "5️⃣": 5,
    "6️⃣": 6, "7️⃣": 7, "8️⃣": 8, "9️⃣": 9, "🔟": 10
}

letter_emoji = {
    "A": "🇦", "B": "🇧", "C": "🇨", "D": "🇩", "E": "🇪", "F": "🇫", "G": "🇬",
    "H": "🇭", "I": "🇮", "J": "🇯", "K": "🇰", "L": "🇱", "M": "🇲", "N": "🇳",
    "O": "🇴", "P": "🇵", "Q": "🇶", "R": "🇷", "S": "🇸", "T": "🇹", "U": "🇺",
    "V": "🇻", "W": "🇼", "X": "🇽", "Y": "🇾", "Z": "🇿"
}

card_emoji = {
    "Hearts": {
        1: "<:HA:716858601041428502>", 2: "<:H2:716858631936671804>",
        3: "<:H3:716858652752871485>", 4: "<:H4:716858669446332426>",
        5: "<:H5:716858683857829890>", 6: "<:H6:716858697732718684>",
        7: "<:H7:716858732557893632>", 8: "<:H8:716858746474725386>",
        9: "<:H9:716858760450146384>", 10: "<:H10:716858775570481223>",
        11: "<:HJ:716858817094090832>", 12: "<:HQ:716858849868513341>",
        13: "<:HK:716858861247791196>"
    },
    "Diamonds": {
        1: "<:DA:716858907821342740>", 2: "<:D2:716858925395476510>",
        3: "<:D3:716858934874341446>", 4: "<:D4:716858950133350444>",
        5: "<:D5:716858961730732043>", 6: "<:D6:716858984522580008>",
        7: "<:D7:716858996459307088>", 8: "<:D8:716859011491954720>",
        9: "<:D9:716859023093399643>", 10: "<:D10:716859063111254018>",
        11: "<:DJ:716859091942899784>", 12: "<:DQ:716859115149852722>",
        13: "<:DK:716859126088728607>"
    },
    "Spades": {
        1: "<:SA:716859337850748979>", 2: "<:S2:716859353390383176>",
        3: "<:S3:716859364945952788>", 4: "<:S4:716859377793105980>",
        5: "<:S5:716859390275354624>", 6: "<:S6:716859401415426080>",
        7: "<:S7:716859412697841776>", 8: "<:S8:716859444427882556>",
        9: "<:S9:716859456889028679>", 10: "<:S10:716859469392379975>",
        11: "<:SJ:716859500518440961>", 12: "<:SQ:716859517417029652>",
        13: "<:SK:716859531400839178>"
    },
    "Clubs": {
        1: "<:CA:716859547956019250>", 2: "<:C2:716859561998418021>",
        3: "<:C3:716859569946492959>", 4: "<:C4:716859578154876929>",
        5: "<:C5:716859589160730674>", 6: "<:C6:716859596479922297>",
        7: "<:C7:716859608131698751>", 8: "<:C8:716859613676437514>",
        9: "<:C9:716859631120547922>", 10: "<:C10:716859635826556980>",
        11: "<:CJ:716859641388335124>", 12: "<:CQ:716859653182718083>",
        13: "<:CK:716859657972350977>"
    }
}

def number_to_emoji(number):
    return number_emoji[number]

def emoji_to_number(emoji):
    if emoji not in ["0️⃣", "1️⃣", "2️⃣", "3️⃣", "4️⃣", "5️⃣", "6️⃣", "7️⃣", "8️⃣", "9️⃣", "🔟"]:
        return None
    return emoji_number[emoji]

def string_to_emoji(word):
    emojis = ""
    letters = word.upper()
    for i in letters:
        if ord(i) in range(65,91):
            emojis += letter_emoji[i]
        elif ord(i) in range(48,58):
            emojis += number_emoji[int(i)]
        else:
            emojis += "*️⃣"
    return emojis
